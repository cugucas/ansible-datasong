---

- name: mkdir for hadoop home
  file: 
    dest: "{{ hadoop_install_path }}"
    mode: 0755
    state: directory
    owner: "{{ hadoop_user }}" 
    group: "{{ hadoop_group }}"
  tags: 
    - install


- name: copy and unzip hadoop.tar.gz to hosts
  unarchive: 
    src: "{{ hadoop_tarball }}"
    dest: "{{ hadoop_install_path }}"

- name: modify hadoop configuration 
  template: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'core-site.xml.j2', dest: '{{ hadoop_home }}/etc/hadoop/core-site.xml' }
    - { src: 'hdfs-site.xml.j2', dest: '{{ hadoop_home }}/etc/hadoop/hdfs-site.xml' } 
    - { src: 'hadoop-env.sh.j2', dest: '{{ hadoop_home }}/etc/hadoop/hadoop-env.sh' } 
    - { src: 'mapred-site.xml.j2', dest: '{{ hadoop_home }}/etc/hadoop/mapred-site.xml' } 
    - { src: 'yarn-env.sh.j2', dest: '{{ hadoop_home }}/etc/hadoop/yarn-env.sh' } 
    - { src: 'yarn-site.xml.j2', dest: '{{ hadoop_home }}/etc/hadoop/yarn-site.xml' } 
    - { src: 'slaves.j2', dest: '{{ hadoop_home }}/etc/hadoop/slaves' } 
  tags: 
    - install
    - configure


- name: create the dfs namenode directory
  file: 
    dest: "{{ dfs_namenode_name_dir }}"
    mode: 0755
    state: directory
    owner: "{{ hadoop_user }}" 
    group: "{{ hadoop_group }}"
  when: ansible_hostname in groups['hadoop-namenodes']
  tags: 
    - install


- name: create excludes file
  copy: 
    src: excludes 
    dest: "{{ hadoop_home }}/etc/hadoop/"
    owner: root 
    group: root 
    mode: 0755
  when: ansible_hostname in groups['hadoop-namenodes']
  tags: 
    - install
    - configure

- name: create the /data/dfs directory
  file: 
    dest: "{{ dfs_datanode_data_dir }}"
    mode: 0755
    state: directory
    owner: "{{ hadoop_user }}" 
    group: "{{ hadoop_group }}"
  when: ansible_hostname in groups['hadoop-datanodes']
  tags: 
    - install

 
- name: change shell sbin file
  file: 
    dest: "{{ hadoop_home }}/sbin"
    mode: 0755 
    recurse: yes
  tags: 
    - install

- name: change shell bin file
  file: 
    dest: "{{ hadoop_home }}/bin" 
    mode: 0755 
    recurse: yes
  tags: 
    - install

- name: format active namenode hdfs
  shell: sh {{ hadoop_home }}/bin/hdfs namenode -format -force
  become: true
  become_method: su
  become_user: root
  when: namenode_format
  tags: 
    - install

- name: stop namenode hdfs
  shell: sh {{ hadoop_home }}/sbin/stop-dfs.sh
  become: true
  become_method: su
  become_user: root
  when: ansible_hostname == groups['hadoop-namenodes'][0]
  tags: 
    - stop
    - restart

- name: start namenode hdfs
  shell: sh {{ hadoop_home }}/sbin/start-dfs.sh
  become: true
  become_method: su
  become_user: root
  when: ansible_hostname == groups['hadoop-namenodes'][0]
  tags: 
    - install
    - start
    - restart

- name: format standby namenode hdfs
  shell: sh {{ hadoop_home }}/bin/hdfs namenode -bootstrapStandby -force
  become: true
  become_method: su
  become_user: root
  when: namenode_standby
  tags: 
    - install

